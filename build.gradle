group 'annotation-pipeline'
version '1.0'



buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    compile(
            'com.googlecode.json-simple:json-simple:1.1.1',
            'org.projectlombok:lombok:1.16.14',
            'edu.stanford.nlp:stanford-corenlp:3.8.0',
            'edu.stanford.nlp:stanford-corenlp:3.8.0:models',
            'net.iot-solutions.graphdb:jcypher:3.8.0',
            'com.amazonaws:aws-java-sdk:1.11.224',
            "org.springframework.boot:spring-boot-starter-jetty",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-actuator",
            "io.springfox:springfox-swagger2:2.5.0",
            "io.springfox:springfox-swagger-ui:2.5.0",
            "javax.mail:mail:1.4",
            "com.squareup.okhttp3:okhttp:3.6.0",
            "org.neo4j.driver:neo4j-java-driver:1.5.1",

            //CR
            "org.jsoup:jsoup:1.8.3",
            "org.mapdb:mapdb:2.0-beta8",
            "org.apache.lucene:lucene-core:5.4.0",
            "org.apache.lucene:lucene-suggest:5.4.0",
            "net.sourceforge.owlapi:owlapi-distribution:4.0.2"
    )


    testCompile 'junit:junit:4.12'

}


jar {
    manifest {
        attributes 'Main-Class': 'au.org.garvan.kccg.annotations.pipeline.managers.DocumentProcessor'
    }

    exclude('au/org/garvan/kccg/annotations/pipeline/engine/userinterfaces/**')
}

bootRun {
    systemProperties System.properties


}

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'phenomics-pipepline'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom',  '-Dspring.profiles.active=docker', '-jar', '/app.jar' ])
    exposePort(9080)
}
task buildDockerProd(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'phenomics-pipepline-prod'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom',  '-Dspring.profiles.active=prod', '-jar', '/app.jar' ])
    exposePort(9080)
}

buildDocker.dependsOn(build)

